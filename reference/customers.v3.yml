
       
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attributes
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/customers/attribute-values':
    get:
      description: Returns a list of Customer Attribute Values. Optional filter parameters can be passed in.
      summary: Get All Customer Attribute Values
      operationId: CustomersAttributeValuesGet
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: 'customer_id:in'
          description: 'Filter items by the customer ID. `customer_id:in=23,24,55`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'attribute_id:in'
          in: query
          description: 'Filter items by the attribute ID. `attribute_id:in=1,2`'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: Filter items by the attribute name. `name=age`
          schema:
            type: string
        - name: date_created
          in: query
          description: 'Filter items by `date_created`. `date_created=2018-09-05T13:43:54`'
          schema:
            type: string
            format: date-time
        - name: 'date_created:max'
          in: query
          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
        - name: 'date_created:min'
          in: query
          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: date_modified
          in: query
          description: 'Filter items by `date_modified`. `date_modified=2018-09-05T13:45:03`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
            format: date-time
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by minimum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
      tags:
        - Customer Attribute Values
    put:
      description: |-
        Upserts Customer Attribute Values. Updates the attribute values on the Customer. Multiple customer attribute values can be updated in one call.

        Upsert checks for an existing record. If there is none, it creates the record, if there is a matching record, it updates that record.

        **Limits**
        * 10 per call limit.
      summary: Upsert Customer Attribute Values
      operationId: CustomersAttributeValuesPut
      deprecated: false
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/attributeValue_Base'
            examples:
              Example:
                value:
                  - attribute_id: 1
                    value: 'No'
                    customer_id: 2
        required: true
        x-examples:
          application/json:
            - attribute_id: 52528392
              value: aliqua
              customer_id: 12990306
              id: 47143304
            - attribute_id: 8263909
              value: 'n'
              customer_id: 1122433
              id: 34305734
            - attribute_id: 62186196
              value: ''
              customer_id: 10906989
              id: 21175547
            - attribute_id: 68742149
              value: l
              customer_id: 74084818
              id: 99359610
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
        '422':
          description: |
            The `CustomerAttributeValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Customer Attribute Values
    delete:
      description: |-
        Deletes Customer Attribute Values. Deletes the attribute value from the customer.

        **Required Query**
        * id:in - ID of the *Customer Attribute Value*
      summary: Delete Customer Attribute Values
      operationId: CustomersAttributeValuesDelete
      deprecated: false
      parameters:
        - name: 'id:in'
          in: query
          required: true
          description: |-
            Filter items by ID.
            `id:in=4,5,6`
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          headers: {}
      tags:
        - Customer Attribute Values
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/customers/form-field-values':
    get:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValueCollectionResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Get Customer Form Field Values
      description: |-
        Returns a list of form field values for the Customer or Customer Address object.

        To learn about adding and managing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).
      operationId: CustomerFormFieldsGet
      tags:
        - Customer Form Field Values
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Page number. `page=1`
          schema:
            type: integer
        - in: query
          name: limit
          description: Items count per page. `limit=50`
          schema:
            type: number
        - in: query
          name: customer_id
          description: Filter by the customer ID.
          schema:
            type: integer
        - name: address_id
          in: query
          description: Filter by the ID of the customer address.
          schema:
            type: integer
        - name: field_name
          in: query
          description: Filter by the field name.
          schema:
            type: string
        - name: field_type
          in: query
          description: |-
            Filter by the field type.
             * `checkboxes` - checkboxes field
             * `date` - date field
             * `multiline` - multiline text field
             * `numbers` - numbers only field
             * `password` - password field
             * `radiobuttons` - radio buttons field
             * `text` - text field
             * `picklist` - pick list field
          schema:
            type: string
            enum:
              - checkboxes
              - date
              - multiline
              - numbers
              - password
              - radiobuttons
              - text
              - picklist
    put:
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValuesResponse'
        '422':
          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Upsert Customer Form Field Values
      description: |-
        Updates form field values on the Customer or Customer Address objects. Multiple form field values can be updated in one call.

        Upsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record.

        To learn more about editing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).

        **Limits**
        * Limit of 10 concurrent requests.
      operationId: CustomerFormFieldValuePUT
      tags:
        - Customer Form Field Values
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/formFieldValue_Full'
            examples:
              Example:
                value:
                  - customer_id: 12
                    name: Sales Rep
                    value: Miss Moneypenny
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Other
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/customers/{customerId}/consent':
    get:
      description: Gets the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Get Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_GET
      deprecated: false
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Updates the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.
      summary: Update Customer Consent
      tags:
        - Customer Consent
      operationId: CustomersConsentByCustomerId_PUT
      deprecated: false
      parameters:
        - name: Content-Type
          in: header
          required: false
          description: ''
          schema:
            type: string
            default: application/json
        - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclareCustomerConsentRequest'
        x-examples:
          application/json:
            allow:
              - essential
            deny: []
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
      - schema:
          type: string
        name: customerId
        in: path
        required: true
  '/stores/{store_hash}/v3/customers/{customerId}/stored-instruments':
    get:
      summary: Get Stored Instruments
      tags:
        - Customer Stored Instruments
      description: |-
        Lists all available stored instruments for a customer. This list will include all types of stored instruments namely card, account and bank_account instruments

      operationId: liststoredinstruments
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/CardInstrument'
                    - $ref: '#/components/schemas/PayPalAccountInstrument'
                    - $ref: '#/components/schemas/BankAccountInstrument'
                  discriminator:
                    propertyName: type
                    mapping:
                      stored_card: '#/components/schemas/CardInstrument'
                      stored_paypal_account: '#/components/schemas/PaypalAccountInstrument'
                      stored_bank_account: '#/components/schemas/BankAccountInstrument'
              examples:
                example-1:
                  value:
                    - type: stored_card
                      token: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
                      is_default: true
                      brand: VISA
                      expiry_month: 1
                      expiry_year: 0
                      issuer_identification_number: '411111'
                      last_4: '1111'
                      billing_address:
                        first_name: Tester
                        last_name: Tester
                        email: example@email.com
                        company: Test Company
                        address1: 1 Sample Street
                        address2: Apt 1
                        city: Las Vegas
                        postal_code: '90854'
                        state_or_province: Nevada
                        state_or_province_code: NV
                        country_code: US
                        phone: 101-192-0293
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Unauthorized
        '403':
          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 403
                message: Missing scope
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
      - schema:
          type: string
        name: customerId
        in: path
        required: true
components:
  parameters:
    customerId:
      name: customerId
      in: path
      required: true
      description: ''
      schema:
        type: string
  responses:
    CustomerCollectionResponse:
      description: Customer Collection Response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/customer_Full'
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            example-1:
              value:
                data:
                  - email: string@example.com
                    first_name: string
                    last_name: string
                    company: string
                    phone: string
                    notes: string
                    tax_exempt_category: string
                    customer_group_id: 0
                    addresses: 
                      - first_name: string
                        last_name: string
                        address1: Addr1
                        address2: ''
                        city: string
                        state_or_province: string
                        postal_code: string
                        country_code: st
                        phone: string
                        address_type: residential
                        customer_id: 0
                        id: 0
                        country: string 
                    store_credit_amounts:
                      - amount: 43.15
                    accepts_product_review_abandoned_cart_emails: true
                    channel_ids:
                      - 1
                    shopper_profile_id: "82511e54-4040-40fe-b742-2b25655f205b"
                    segment_ids: ["5bb733a9-5491-47b3-9451-9ae8d6a6bc6b"]
                meta:
                  pagination:
                    total: 0
                    count: 0
                    per_page: 0
                    current_page: 0
                    total_pages: 0
                    links:
                      previous: string
                      current: string
                      next: string
    AddressCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: AddressCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial.
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    country:
                      description: The country name of the customer address.
                      type: string
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    state_or_province:
                      description: The state or province name
                      type: string
                      minLength: 0
                      maxLength: 100
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        allOf:
                          - $ref: "#/components/schemas/formFieldValue_Address"
                        title: 'Customer Address Form Field Value'
                  required:
                    - address1
                    - city
                    - country_code
                    - customer_id
                    - first_name
                    - id
                    - last_name
                    - postal_code
                    - state_or_province
              meta:
                $ref: '#/components/schemas/_metaCollection'
          examples:
            response:
              value:
                data:
                  - address1: 123 Example Street
                    address2: Building 4
                    address_type: residential
                    city: Austin
                    company: BigCommerce
                    country: United States
                    country_code: US
                    customer_id: 1
                    first_name: John
                    id: 18
                    last_name: Doe
                    phone: '15551234567'
                    postal_code: '78759'
                    state_or_province: Texas
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
    AddressCollectionResponsePostPut:
      description: ''
      content:
        application/json:
          schema:
            anyOf:
              - title: AddressCollectionResponse
                description: Response payload for the BigCommerce API.
                example:
                  data:
                    - address1: 123 Example Street
                      address2: Building 4
                      address_type: residential
                      city: Austin
                      company: BigCommerce
                      country: United States
                      country_code: US
                      customer_id: 1
                      first_name: John
                      id: 18
                      last_name: Doe
                      phone: '15551234567'
                      postal_code: '78759'
                      state_or_province: Texas
                  meta: {}
                properties:
                  data:
                    type: array
                    items:
                      title: Address
                      type: object
                      properties:
                        address1:
                          description: The address 1 line.
                          type: string
                        address2:
                          description: The address 2 line.
                          type: string
                        address_type:
                          title: Address Type
                          description: The address type. Residential or Commercial.
                          example: residential
                          type: string
                          enum:
                            - residential
                            - commercial
                        city:
                          description: The city of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 100
                        company:
                          description: The company of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 255
                        country:
                          description: The country name of the customer address.
                          type: string
                        country_code:
                          description: The country code of the customer address.
                          type: string
                          minLength: 2
                          maxLength: 2
                        customer_id:
                          description: The customer ID.
                          type: integer
                          format: int32
                        first_name:
                          description: The first name of the customer address.
                          type: string
                          minLength: 1
                          maxLength: 255
                        id:
                          description: The unique numeric ID of the address.
                          type: integer
                          format: int32
                        last_name:
                          description: The last name of the customer address.
                          type: string
                          minLength: 1
                          maxLength: 255
                        phone:
                          description: The phone number of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 50
                        postal_code:
                          description: The postal code of the customer address.
                          type: string
                          minLength: 0
                          maxLength: 30
                        state_or_province:
                          description: The state or province name
                          type: string
                          minLength: 0
                          maxLength: 100
                        form_fields:
                          description: Array of form fields. Controlled by `formfields` parameter.
                          type: array
                          items:
                            oneOf:
                              - allOf:
                                  - type: object
                                    title: Form Field Value Base
                                  - type: object
                              - allOf:
                                  - type: object
                                    title: Form Field Value Base
                                  - type: object
                            title: 'Form Field Value '
                  meta:
                    type: object
              - title: DuplicateAddressCollectionResponse
                example: {}
            type: object
            properties:
              data:
                type: array
                items:
                  title: Address
                  type: object
                  properties:
                    address1:
                      description: The address 1 line.
                      type: string
                    address2:
                      description: The address 2 line.
                      type: string
                    address_type:
                      title: Address Type
                      description: The address type. Residential or Commercial
                      example: residential
                      type: string
                      enum:
                        - residential
                        - commercial
                    city:
                      description: The city of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 100
                    company:
                      description: The company of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 255
                    country:
                      description: The country name of the customer address.
                      type: string
                    country_code:
                      description: The country code of the customer address.
                      type: string
                      minLength: 2
                      maxLength: 2
                    customer_id:
                      description: The customer ID.
                      type: integer
                      format: int32
                    first_name:
                      description: The first name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    id:
                      description: The unique numeric ID of the address.
                      type: integer
                      format: int32
                    last_name:
                      description: The last name of the customer address.
                      type: string
                      minLength: 1
                      maxLength: 255
                    phone:
                      description: The phone number of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 50
                    postal_code:
                      description: The postal code of the customer address.
                      type: string
                      minLength: 0
                      maxLength: 30
                    state_or_province:
                      description: The state or province name.
                      type: string
                      minLength: 0
                      maxLength: 100
                    form_fields:
                      description: Array of form fields. Controlled by `formfields` parameter.
                      type: array
                      items:
                        allOf:
                          - $ref: "#/components/schemas/formFieldValue_Address"
                        title: 'Customer Address Form Field Value'
              meta:
                type: object
          examples:
            application/json:
              value:
                address1: 123 Example Street
                address2: Building 4
                address_type: residential
                city: Austin
                company: BigCommerce
                country: United States
                country_code: US
                customer_id: 1
                first_name: John
                id: 18
                last_name: Doe
                phone: '15551234567'
                postal_code: '78759'
                state_or_province: Texas
                meta: {}
            duplicate:
              value: {}
    CustomerAttributeValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributeValueCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute Value
                  type: object
                  properties:
                    attribute_id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    attribute_value:
                      description: |-
                        Attribute value. This will always be a string, regardless of the attributes type. 

                        Corresponds to `value` used in customer attribute values `PUT` requests.
                      type: string
                      minLength: 0
                      maxLength: 255
                    id:
                      description: Attribute value ID.
                      type: integer
                      format: int32
                    customer_id:
                      description: Customer ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute value was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute value was created.
                      type: string
                      format: date-time
                  required:
                    - attribute_id
                    - attribute_value
                    - customer_id
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
    CustomerAttributesResponse:
      description: ''
      content:
        application/json:
          schema:
            title: CustomerAttributesResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  title: Customer Attribute
                  type: object
                  properties:
                    name:
                      description: Attribute name.
                      type: string
                      minLength: 1
                      maxLength: 255
                    type:
                      title: Type
                      description: 'Attribute type should match one of: string, number, date.'
                      example: string
                      type: string
                      enum:
                        - string
                        - number
                        - date
                    id:
                      description: Attribute ID.
                      type: integer
                      format: int32
                    date_modified:
                      description: The date on which the customer attribute was modified.
                      type: string
                      format: date-time
                    date_created:
                      description: The date of which the customer attribute was created.
                      type: string
                      format: date-time
                  required:
                    - name
                    - type
                    - id
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - id: 1
                    name: Age
                    type: string
                    date_created: '2018-11-13T21:42:06Z'
                    date_modified: '2018-11-14T16:46:23Z'
                meta: {}
    FormFieldValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: 'Form Field Value '
              meta:
                title: Collection Meta
                description: 'Data about the response, including pagination and collection totals.'
                type: object
                properties:
                  pagination:
                    title: Pagination
                    description: 'Data about the response, including pagination and collection totals.'
                    type: object
                    properties:
                      total:
                        description: Total number of items in the result set.
                        type: integer
                        format: int32
                      count:
                        description: Total number of items in the collection response.
                        type: integer
                        format: int32
                      per_page:
                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
                        type: integer
                        format: int32
                      current_page:
                        description: The page you are currently on within the collection.
                        type: integer
                        format: int32
                      total_pages:
                        description: The total number of pages in the collection.
                        type: integer
                        format: int32
                      links:
                        title: Links
                        description: Pagination links for the previous and next parts of the whole collection.
                        type: object
                        properties:
                          previous:
                            description: Link to the previous page returned in the response.
                            type: string
                          current:
                            description: Link to the current page returned in the response.
                            type: string
                          next:
                            description: Link to the next page returned in the response.
                            type: string
          examples:
            Customer and Customer Address Form Fields example:
              value:
                data:
                  - customer_id: 11
                    name: Sales Rep
                    value: James Bond
                  - customer_id: 11
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 11
                    name: What is your favorite pizza topping?
                    value: Black olives
                  - customer_id: 12
                    name: Sales Rep
                    value: None
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
                  - customer_id: 13
                    name: Sales Rep
                    value: Felix Leiter
                  - customer_id: 13
                    name: How did you hear about us?
                    value: Email
                  - customer_id: 13
                    name: What is your favorite pizza topping?
                    value: Green pepper
                  - customer_id: 13
                    name: Occupation
                    value: Housekeeper
                  - address_id: 12
                    name: Special Delivery Instructions
                    value: Leave the package at the front door
                  - customer_id: 14
                    name: Sales Rep
                    value: General Gogol
                  - customer_id: 14
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 14
                    name: What is your favorite pizza topping?
                    value: Extra cheese
                  - address_id: 13
                    name: Special Delivery Instructions
                    value: Put the package in the mailbox
                meta:
                  pagination:
                    count: 15
                    current_page: 1
                    per_page: 50
                    total: 15
                    total_pages: 1
            Customer Form Fields example:
              value:
                data:
                  - customer_id: 11
                    name: Sales Rep
                    value: James Bond
                  - customer_id: 11
                    name: How did you hear about us?
                    value: Friend
                  - customer_id: 11
                    name: What is your favorite pizza topping?
                    value: Black olives
                meta:
                  pagination:
                    count: 3
                    current_page: 1
                    per_page: 50
                    total: 3
                    total_pages: 1
            Customer Address Form Fields example:
              value:
                data:
                  - address_id: 12
                    name: Special Delivery Instructions
                    value: Leave the package at the front door
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    per_page: 50
                    total: 1
                    total_pages: 1
    FormFieldValuesResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            customer_id:
                              type: integer
                          required:
                            - customer_id
                      title: Customer Form Field Value
                    - allOf:
                        - type: object
                          title: Form Field Value Base
                          required:
                            - name
                            - value
                          properties:
                            name:
                              type: string
                              description: The form field name.
                              example: color
                            value:
                              oneOf:
                                - type: string
                                  example: blue
                                - type: number
                                  format: double
                                  example: 12.345
                                - type: array
                                  example:
                                    - red
                                    - green
                                    - black
                                  items:
                                    type: string
                        - type: object
                          properties:
                            address_id:
                              type: integer
                              description: The Customer Address ID.
                          required:
                            - address_id
                      title: Customer Address Form Field Value
                  title: 'Form Field Value '
              meta:
                type: object
          examples:
            response:
              value:
                data:
                  - customer_id: 12
                    name: Sales Rep
                    value: Miss Moneypenny
                  - customer_id: 12
                    name: How did you hear about us?
                    value: Other
                  - customer_id: 12
                    name: What is your favorite pizza topping?
                    value: Mushrooms
                meta: {}
    consent_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/consent_Full'
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
  schemas:
    Pagination:
      title: Pagination
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        total:
          description: Total number of items in the result set.
          type: integer
          format: int32
        count:
          description: Total number of items in the collection response.
          type: integer
          format: int32
        per_page:
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
          type: integer
          format: int32
        current_page:
          description: The page you are currently on within the collection.
          type: integer
          format: int32
        total_pages:
          description: The total number of pages in the collection.
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/Links'
      x-internal: false
    _metaCollection:
      title: _metaCollection
      description: 'Data about the response, including pagination and collection totals.'
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
      x-internal: false
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        status:
          description: The HTTP status code.
          type: integer
          format: int32
        title:
          description: The error title describing the particular error.
          type: string
        type:
          description: A link to a list of BigCommerce API status codes.
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
      x-internal: false
    customer_Full:
      title: customer_Full
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        date_modified:
          description: The date on which the customer was modified.
          type: string
          format: date-time
        date_created:
          description: The date of which the customer was created.
          type: string
          format: date-time
        address_count:
          description: Total number of customer addresses.
          type: integer
          format: int32
        attribute_count:
          description: Total number of customer attributes.
          type: integer
          format: int32
        authentication:
          title: Customer Authentication Base
          example:
            force_password_reset: true
          type: object
          properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        addresses:
          description: Array of customer addresses. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/address_Full'
        attributes:
          description: Array of customer attributes. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/attribute_Full'
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            $ref: '#/components/schemas/formFieldValue_Customer'
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: Determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          $ref: '#/components/schemas/customerChannelIds'
      x-internal: false
    customer_Post:
      title: customer_Post
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        addresses:
          description: Array of customer addresses. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAddresses_CustomerPost'
        attributes:
          description: Array of customer attributes. Limited to 10.
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/customerAttributes_Base'
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          description: Array of channels the customer can access.
          type: array
          example: [1,2]
          items:
            type: integer
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"    
      required:
        - email
        - first_name
        - last_name
      x-internal: false
    customer_Put:
      title: customer_Put
      type: object
      properties:
        email:
          description: The email of the customer. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
        first_name:
          description: The first name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          description: The last name of the customer.
          type: string
          minLength: 1
          maxLength: 100
        company:
          description: The company of the customer.
          type: string
          minLength: 0
          maxLength: 255
        phone:
          description: The phone number of the customer.
          type: string
          minLength: 0
          maxLength: 50
        registration_ip_address:
          description: The IP address from which this customer was registered.
          type: string
          minLength: 0
          maxLength: 30
        notes:
          description: The customer notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the customer.
          type: string
          minLength: 0
          maxLength: 255
        customer_group_id:
          description: ID of the group which this customer belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the customer.
          type: integer
          format: int32
        authentication:
          $ref: '#/components/schemas/customerAuthentication_PostPut'
        accepts_product_review_abandoned_cart_emails:
          type: boolean
          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or receive both emails.
        store_credit_amounts:
          $ref: '#/components/schemas/CustomerStoredCreditAmounts'
        origin_channel_id: 
          type: integer
          description: Channel ID of the customer that has created the form.
        channel_ids:
          description: Arrays of channels the customer can access.
          type: array
          items:
            type: integer
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"    
      required:
        - id
      x-internal: false
    attributeValue_Base:
      title: attributeValue_Base
      type: object
      properties:
        id:
          description: Attribute value ID.
          type: integer
          format: int32
        attribute_id:
          description: Attribute ID.
          type: integer
          format: int32
        value:
          description: |-
            Attribute value. This will always be a string, regardless of the attribute's type. 

            Corresponds to `attribute_value` used in customer attribute values `GET` requests.
          type: string
          minLength: 0
          maxLength: 255
          example: string
        customer_id:
          type: integer
          description: Customer ID.
          format: int32
          example: 8504
      required:
        - attribute_id
        - value
        - customer_id
      x-internal: false
    attribute_Full:
      description: ''
      type: object
      x-examples:
        Example:
          attribute_id: 2
          attribute_value: 'Yes'
          customer_id: 1
          date_created: '2021-07-28T19:00:38Z'
          date_modified: '2021-07-28T19:00:38Z'
          id: 2
      properties:
        attribute_id:
          type: integer
          description: Attribute ID.
          format: int32
          example: 2
        attribute_value:
          type: string
          minLength: 1
          description: Attribute value.
          example: 'Yes'
        customer_id:
          type: integer
          description: Customer ID.
          example: 1
          format: int32
        date_created:
          type: string
          minLength: 1
          description: The date the customer attribute was created.
          format: date-time
        date_modified:
          type: string
          minLength: 1
          description: The date the customer attribute was modified.
          format: date-time
        id:
          type: integer
          description: Attribute value ID.
          format: int32
          example: 2
      x-internal: false
    attribute_Put:
      title: attribute_Put
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        id:
          description: Attribute ID.
          type: integer
          format: int32
      required:
        - name
        - id
      description: 'Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.'
      x-internal: false
    attribute_Post:
      title: attribute_Post
      example:
        name: attribute_string 01
        type: string
      type: object
      properties:
        name:
          description: Attribute name.
          type: string
          minLength: 1
          maxLength: 255
        type:
          title: Type
          description: 'Attribute type should match one of: string, number, date.'
          example: string
          type: string
          enum:
            - string
            - number
            - date
      required:
        - name
        - type
      x-internal: false
    address_Full:
      title: address_Full
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
        country:
          description: The country name of the customer address.
          type: string
        form_fields:
                description: Array of form fields. Controlled by `formfields` parameter.
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/formFieldValue"
                  title: 'Customer Address Form Field Value'
      required:
        - first_name
        - last_name
        - address1
        - city
        - state_or_province
        - postal_code
        - country_code
        - customer_id
        - id
      x-internal: false
    address_Put:
      title: address_Put
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name.
          type: string
          minLength: 0
          maxLength: 100
          example: California
        postal_code:
          description: The postal code of the customer address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
          example: US
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        id:
          description: The unique numeric ID of the address.
          type: integer
          format: int32
          example: 1
        form_fields:
          type: array
          description: |
            Array of form fields. Controlled by formfields parameter.
          items:
            $ref: "#/components/schemas/formFieldValue"  
      required:
        - id
      x-examples:
        example-1:
          value:
            - id: 18
              first_name: sam
      x-internal: false
    address_Post:
      title: address_Post
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the customer address.
          minLength: 1
          maxLength: 255
          example: John
        last_name:
          type: string
          description: The last name of the customer address.
          minLength: 1
          maxLength: 255
          example: Doe
        company:
          type: string
          description: The company of the customer address.
          minLength: 0
          maxLength: 255
          example: BigCommerce
        address1:
          type: string
          description: The address 1 line.
          example: 123 Example Street
        address2:
          type: string
          description: The address 2 line.
          example: Building 4
        city:
          type: string
          description: The city of the customer address.
          minLength: 0
          maxLength: 100
          example: Austin
        state_or_province:
          type: string
          description: The state or province name spelled out in full. It is required for countries that need a state/province to complete an address. State or province codes not accepted.
          example: Texas
          minLength: 0
          maxLength: 100
        postal_code:
          type: string
          description: The postal code of the customer address. It is required for countries that need postal codes to complete an address.
          minLength: 0
          maxLength: 30
          example: '78759'
        country_code:
          type: string
          description: The country code of the customer address.
          example: US
          minLength: 2
          maxLength: 2
        phone:
          type: string
          description: The phone number of the customer address.
          minLength: 0
          maxLength: 50
          example: '15551234567'
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        customer_id:
          description: The customer ID.
          type: integer
          format: int32
          example: 1
        form_fields:
          type: array
          description: |
            The address custom form field values
          items:
            $ref: "#/components/schemas/formFieldValue"
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
        - customer_id
      x-examples:
        Example:
          value:
            first_name: John
            last_name: Doe
            company: BigCommerce
            address1: 123 Example Street
            address2: Building 4
            city: Austin
            state_or_province: Texas
            postal_code: '78759'
            country_code: US
            phone: '15551234567'
            address_type: residential
            customer_id: 1
      x-internal: false
    customerAddresses_Base:
      title: customerAddresses_Base
      example:
        address1: Addr 1
        address2: ''
        address_type: residential
        city: San Francisco
        company: History
        country_code: US
        first_name: Ronald
        last_name: Swimmer
        phone: '707070707'
        postal_code: '33333'
        state_or_province: California
      type: object
      properties:
        first_name:
          description: The first name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name. It is required for countries that need a state/province to complete an address.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address. It is required for countries that need postal codes to complete an address.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
      description: The `address` object for the `customer` object's `addresses` array.
      x-internal: false
    customerAddresses_CustomerPost:
      title: customerAddresses_CustomerPost
      example:
        address1: Addr 1
        address2: ''
        address_type: residential
        city: San Francisco
        company: History
        country_code: US
        first_name: Ronald
        last_name: Swimmer
        phone: '707070707'
        postal_code: '33333'
        state_or_province: California
        form_fields: 
          - name: "test"
            value: "test"
      type: object
      properties:
        first_name:
          description: The first name associated with the customer address.
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          description: The last name of the customer address.
          type: string
          minLength: 1
          maxLength: 255
        company:
          description: The company of the customer address.
          type: string
          minLength: 0
          maxLength: 255
        address1:
          description: The address 1 line.
          type: string
        address2:
          description: The address 2 line.
          type: string
        city:
          description: The city of the customer address.
          type: string
          minLength: 0
          maxLength: 100
        state_or_province:
          description: The state or province name. Required for countries in which valid addresses must contain a state/province.
          type: string
          minLength: 0
          maxLength: 100
        postal_code:
          description: The postal code of the customer address. Required for countries in which valid addresses must have postal codes.
          type: string
          minLength: 0
          maxLength: 30
        country_code:
          description: The country code of the customer address.
          type: string
          minLength: 2
          maxLength: 2
        phone:
          description: The phone number of the customer address.
          type: string
          minLength: 0
          maxLength: 50
        address_type:
          title: Address Type
          description: The address type. Residential or Commercial.
          example: residential
          type: string
          enum:
            - residential
            - commercial
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/formFieldValue"
            title: 'Customer Address Form Field Value'    
      required:
        - first_name
        - last_name
        - address1
        - city
        - country_code
      description: The `address` object for the `customer` object's `addresses` array.
      x-internal: false  
    customerAuthentication_PostPut:
      title: customerAuthentication_PostPut
      allOf:
        - properties:
            force_password_reset:
              description: 'If `true`, this customer will be forced to change password on next login.'
              type: boolean
        - properties:
            new_password:
              description: New password for customer. Write only field.
              type: string
      type: object
      x-internal: false
    Links:
      title: Links
      description: Pagination links for the previous and next parts of the whole collection.
      type: object
      properties:
        previous:
          description: Link to the previous page returned in the response.
          type: string
        current:
          description: Link to the current page returned in the response.
          type: string
        next:
          description: Link to the next page returned in the response.
          type: string
    formFieldValue:
      title: Generic Form Field Value
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string      
    formFieldValue_Customer:
      title: Customer Form Field Value
      type: object
      required:
        - customer_id
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string
        customer_id:
          type: integer      
    formFieldValue_Address:
      title: Customer Address Form Field Value
      type: object
      required:
        - address_id
        - name
        - value
      properties:
        name:
          type: string
          description: The form field name.
          example: color
        value:
          oneOf:
            - type: string
              example: blue
            - type: number
              format: double
              example: 12.345
            - type: array
              example:
                - red
                - green
                - black
              items:
                type: string
        address_id:
          type: integer
          description: The Customer Address ID.
          example: 1
      x-internal: false
    formFieldValue_Full:
      oneOf:
        - $ref: "#/components/schemas/formFieldValue_Customer"
        - $ref: "#/components/schemas/formFieldValue_Address"
      title: formFieldValue_Full
      x-internal: false
    consent_Full:
      title: consent_Full
      description: Response payload for the BigCommerce API.
      type: object
      properties:
        allow:
          $ref: '#/components/schemas/consentAllow'
        deny:
          $ref: '#/components/schemas/Deny'
        updated_at:
          description: The date of which the customer consent was last updated.
          type: string
          format: date-time
      x-internal: false
    consentAllow:
      title: consentAllow
      type: array
      uniqueItems: true
      minItems: 0
      example:
        - essential
        - targeting
        - functional
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
      x-internal: false
    Deny:
      title: Deny
      type: array
      uniqueItems: true
      minItems: 0
      example:
        - analytics
      items:
        type: string
        enum:
          - essential
          - functional
          - analytics
          - targeting
      x-internal: false
    DeclareCustomerConsentRequest:
      title: DeclareCustomerConsentRequest
      description: Request payload for the BigCommerce API.
      type: object
      properties:
        allow:
          $ref: '#/components/schemas/consentAllow'
        deny:
          $ref: '#/components/schemas/Deny'
      x-internal: false
    customerAttributes_Base:
      description: ''
      title: customerAttributes_Base
      type: object
      properties:
        attribute_id:
          type: integer
          format: int32
          example: 55
          description: Attribute ID.
        attribute_value:
          type: string
          example: string
          minLength: 0
          maxLength: 255
          description: 'Attribute value. This will always be a string, regardless of the attribute’s type.'
      x-internal: false
    customerChannelIds:
      type: array
      title: customerChannelIds
      description: Array of channel ids the Customer has access to.
      items:
        example:
          - 1
          - 2
      x-internal: false
    CardInstrument:
      type: object
      title: Card Instrument
      properties:
        type:
          type: string
          description: Type of instrument.
          enum:
            - stored_card
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        brand:
          type: string
          description: Card brand.
          example: VISA
        expiry_month:
          maximum: 12
          minimum: 1
          type: integer
          description: Expiry month for this card.
        expiry_year:
          type: integer
          description: Expiry year for this card.
        issuer_identification_number:
          type: string
          description: Issuer identification number for this card.
          example: '411111'
        last_4:
          type: string
          description: Last four digits of this card.
          example: '1111'
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
      description: 'Details about a stored card instrument which includes details around billing, last 4 digits, issuer, etc.'
      x-internal: false
    PayPalAccountInstrument:
      type: object
      title: PayPal Account Instrument
      properties:
        type:
          type: string
          description: Instrument type.
          enum:
            - stored_paypal_account
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        email:
          type: string
          description: PayPal email address.
          example: bc-buyer-paypal-express@example.com
      description: A PayPal account stored instrument.
      x-internal: false
    BankAccountInstrument:
      type: object
      title: Bank Account Instrument
      properties:
        type:
          type: string
          description: Instrument type.
          enum:
            - stored_bank_account
        token:
          type: string
          description: An identifier representing this stored instrument.
          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
        is_default:
          type: boolean
          description: Identifies whether this stored instrument is default for the customer.
        masked_account_number:
          type: string
          description: A masked bank account number.
          example: 12XXX56
        issuer:
          type: string
          description: Issuer identifier for the account.
          example: DE001
      description: A stored bank account instrument.
      x-internal: false
    BillingAddress:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the card holder.
          example: Tester
        last_name:
          type: string
          description: Last name of the card holder.
          example: Tester
        email:
          type: string
          example: example@example.com
        company:
          type: string
          description: Company of the card holder.
          example: Test Company
        address1:
          type: string
          example: 1 Sample Street
        address2:
          type: string
          example: Apt 1
        city:
          type: string
          example: Las Vegas
        postal_code:
          type: string
          example: '90854'
        state_or_province:
          type: string
          description: Represents state or province.
          example: Nevada
        state_or_province_code:
          type: string
          example: NV
        country_code:
          type: string
          description: ISO-3166-1 2 letter country code.
          example: US
        phone:
          type: string
          example: 101-192-0293
      x-internal: false
    CustomerStoredCreditAmounts:
      description: 'Store credit. '
      type: array
      format: double
      items:
        type: object
        properties:
          amount:
            type: number
            format: float
            example: 43.15
      x-internal: false
    CustomerSettingsObject:
      title: CustomerSettingsObject
      type: object
      description: Customer Settings.
      properties:
        privacy_settings:
          type: object
          description: Controls the privacy settings.
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
              description: Determines if a customer requires consent for tracking privacy.
            policy_url:
              type: string
              example: 'https://bigcommmerce.com/policy'
              description: The URL for a website's privacy policy.
        customer_group_settings:
          type: object
          description: The settings for a collection of customers.
          properties:
            guest_customer_group_id:
              type: integer
              example: 0
              description: The ID for a guest customer group.
            default_customer_group_id:
              type: integer
              example: 0
              description: The ID for a default customer group.
      x-examples:
        example-1:
          value:
            privacy_settings:
              ask_shopper_for_tracking_consent: true
              policy_url: 'https://bigcommmerce.com/policy'
            customer_group_settings:
              guest_customer_group_id: 0
              default_customer_group_id: 0
      x-internal: false
    CustomerChannelSettingsObject:
      title: CustomerChannelSettingsObject
      type: object
      properties:
        privacy_settings:
          type: object
          description: Controls the privacy settings.
          properties:
            ask_shopper_for_tracking_consent:
              type: boolean
              description: Determines if a customer requires consent for tracking privacy.
            policy_url:
              type: string
              example: 'https://bigcommmerce.com/policy'
              description: The URL for a website's privacy policy.
        customer_group_settings:
          type: object
          description: The settings for a collection of customers.
          properties:
            guest_customer_group_id:
              type: integer
              example: 0
              description: The ID for a guest customer group.
            default_customer_group_id:
              type: integer
              example: 0
              description: The ID for a default customer group.
        allow_global_logins:
          type: boolean
          description: |-
            * Determines if a channel allows global customer to login
            * Determines if customers created on this channel will get global access/login
      x-examples:
        example-1:
          value:
            privacy_settings:
              ask_shopper_for_tracking_consent: true
              policy_url: 'https://bigcommmerce.com/policy'
            customer_group_settings:
              guest_customer_group_id: 0
              default_customer_group_id: 0
            allow_global_logins: true
      x-internal: false
    ValidateCustomerCredentialsObject:
      title: ValidateCustomerCredentialsObject
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Customer email address.
        password:
          type: string
          description: Customer password.
        channel_id:
          type: integer
          description: ChannelId to check the customer credentials against - If this field is empty we will use channel 1.
      x-internal: false
    ValidateCustomerCredentialsResponseObject:
      title: ValidateCustomerCredentialsResponseObject
      type: object
      properties:
        customer_id:
          type: integer
          nullable: true
          description: Returns the customer ID.
        is_valid:
          type: boolean
          description: indicates if the provided credentials are valid.
      x-internal: false
