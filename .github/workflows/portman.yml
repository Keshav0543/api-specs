# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "portman_test" ]
  # pull_request:
    # branches: [ "portman_test" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"




  get-changed-files:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files-specific.outputs.any_changed }}
      changed_files: ${{ steps.changed-files-specific.outputs.all_changed_files }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3 
        with:
          fetch-depth: 0

      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v32
        with:
          files: |
            reference/*.yml            

      # - name: Run step if any file(s) in the docs folder change
      #   if: steps.changed-files-specific.outputs.any_changed == 'true'
      #   run: |
      #     echo "One or more files in the docs folder has changed."
      #     echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"


  list-manifests:
    needs: get-changed-files
    if: needs.get-changed-files.outputs.any_changed == true
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix        
        run: |
          echo ${{ needs.get-changed-files.outputs.any_changed }}
          echo "::set-output name=matrix::$(ls ${{needs.get-changed-files.outputs.changed_files}} | jq -R -s -c 'split("\n")[:-1]')"

  check:
    needs: [list-manifests, get-changed-files]      
    if: needs.get-changed-files.outputs.any_changed == true
    runs-on: ubuntu-latest
    # strategy:
    #     matrix:
    #         manifest: ${{ fromJson(needs.list-manifests.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2           
      - run: |
          echo ${{ matrix.manifest }}

      # Runs a single command using the runners shell
      # - name: Run Portman
      #   run: npx @apideck/portman --cliOptionsFile ./portman/portman-cli.json 

      # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
